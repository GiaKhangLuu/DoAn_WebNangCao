@model DoAn_WebNangCao.Models.LINHVUC

@{
    ViewBag.Title = "CreateField";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    int count = 0;
}

<link href="~/Content/modal_add_quiz.css" rel="stylesheet" />

<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-primary">Lĩnh Vực</h1>
    <hr />
    @using (Html.BeginForm("CreateField", "Admin", FormMethod.Post, new { @class = "user" }))
    {
        @Html.AntiForgeryToken()
        <p>Mỗi lĩnh vực phải từ 20 câu hỏi trở lên mới có thể hiển thị lên cho người dùng!</p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            <div class="col-sm-3 mb-3 mb-sm-0">
                @Html.EditorFor(model => model.TenLinhVuc, new { htmlAttributes = new { @class = "form-control form-control-user", placeholder = "Tên Lĩnh Vực", id = "exampleLastName" } })
                @Html.ValidationMessageFor(model => model.TenLinhVuc, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-7 mb-3 mb-sm-0">
                @Html.EditorFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control form-control-user", placeholder = "Ghi Chú", id = "exampleLastName" } })
                @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2 mb-3 mb-sm-0">
                <button type="submit" class="btn btn-success btn-user" style="font-size:15px"><i class="fa fa-check"></i></button>
            </div>
        </div>
        if (ViewBag.ErrorLV != null)
        {
            <p class="text-danger">@ViewBag.ErrorLV</p>
        }
    }
    <hr />
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách Lĩnh Vực</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered dataTable" id="dataTable" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên lĩnh vực</th>
                            <th>Ghi Chú</th>
                            <th>Danh sách câu hỏi</th>
                            <th>Chi tiết</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewData["linhvucLi"] as List<DoAn_WebNangCao.Models.LINHVUC>)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IDLinhVuc)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TenLinhVuc)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GhiChu)
                                </td>
                                <td>
                                    <button onclick="location.href='@Url.Action("ManageQuiz", "Admin", new { idLinhVuc = item.IDLinhVuc })';"
                                            type="button"
                                            class="btn btn-info btn-user"
                                            style="font-size:15px">
                                        <i class="fas fa-list"></i>
                                    </button>
                                </td>
                                <td>
                                    <button id=@count
                                            type="button"
                                            class="btn btn-info btn-user btn-detail-linhvuc"
                                            style="font-size: 15px"
                                            onclick="openModal(this)">
                                        <i class="fas fa-info-circle"></i>
                                    </button>
                                </td>
                            </tr>
                            ++count;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- /.container-fluid -->
</div>

<div id="myModal" class="modal">

    <!-- Modal content -->
    @using (Html.BeginForm("UpdateField", "Admin"))
    {
        <div class="modal-content">
            <div class="modal-header">
                <h4>Cập nhật lĩnh vực</h4>
                <span class="close">&times;</span>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="form-group row">
                        <input type="hidden" name="idLinhVuc" id="idLinhVuc" value="-1" />
                        <div class="col-sm-3 mb-3 mb-sm-0">
                            @Html.EditorFor(model => model.TenLinhVuc, new { htmlAttributes = new { @class = "form-control form-control-user", placeholder = "Tên Lĩnh Vực", id = "tenLinhVuc" } })
                            @Html.ValidationMessageFor(model => model.TenLinhVuc, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-7 mb-3 mb-sm-0">
                            @Html.EditorFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control form-control-user", placeholder = "Ghi Chú", id = "ghiChu" } })
                            @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row justify-content-center">
                    <div class="col-12">
                        <button class="btn btn-primary" type="submit">Cập nhật</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<script>
    var modal = document.getElementById("myModal");

    // Get the button that opens the modal
    var btns = document.getElementsByClassName("btn-detail-linhvuc");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on the button, open the modal
    const openModal = function (event) {
        document.getElementById("idLinhVuc").value = ""
        document.getElementById("tenLinhVuc").value = ""
        document.getElementById("ghiChu").value = ""

        
        var idLinhVuc = event.parentElement.parentElement.children[0].innerText
        var tenLinhVuc = event.parentElement.parentElement.children[1].innerText
        var ghiChu = event.parentElement.parentElement.children[2].innerText

        console.log(idLinhVuc)
        console.log(tenLinhVuc)
        console.log(ghiChu)

        document.getElementById("idLinhVuc").value = idLinhVuc;
        document.getElementById("tenLinhVuc").value = tenLinhVuc;
        document.getElementById("ghiChu").value = ghiChu;

        modal.style.display = "block";
        
        console.log(event)
        return event
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>



